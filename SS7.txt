

;SS7 ==0801==
   10 rem set top of basic to $3000
   20 poke 51, 0: poke 52, 48
   30 poke 55, 0: poke 56, 48
   35 restore
   40 poke 53280,12:poke 53281,15:print "{blk}"
   41 print "{clr}    {rvon}          skyscrape64           "
   42 print "{down}the builder climbs the unfinished"
   43 print "skyscraper in an attempt to reach the"
   44 print "lift at the top, but a collision or a"
   45 print "high fall will lose a life."
   46 print "{down}if he reaches the lift it will carry"
   47 print "him to the next screen. there are 4"
   48 print "different screens."
   49 print "{down}your score depends on the number of"
   50 print "screens completed and the time taken    for each screen."
   59 rem poke in page copy routine
   60 for i=0 to 17
   70 read x
   80 poke 49152+i,x
   90 next i
  100 data 142,10,192, 140,13,192
  101 data 162,0, 189,0,193, 157,0,194
  102 data 202, 208,247, 96
  110 rem turn off kb and i/o
  120 poke 56334,peek(56334)and254:poke 1,peek(1)and251
  130 rem copy all pages of font rom
  140 t=48: f=208
  150 for p=0 to 15
  160 poke 781,f+p:poke 782,t+p:sys 49152
  170 next p
  180 rem turn on i/o and kb
  190 poke 1,peek(1) or 4: poke 56334,peek(56334) or 1
  200 rem set charset pointer to $3000
  210 poke 53272,(peek(53272)and240)+12
  220 rem poke in our characters
  230 for i=1 to 7
  240 read c:x=12288+8*c
  250 for j=0 to 7
  260 read b:poke x+j,b
  270 next j
  280 next i
  290 data 65, 56,56,146,124,56,56,40,108
  300 data 83, 56,56,16,40,40,40,16,16
  310 data 88, 56,56,16,56,124,186,40,68
  320 data 90, 56,184,80,63,184,254,2,0
  330 data 91, 223,223,223,0,253,253,253,0
  340 data 77, 56,58,20,248,58,254,128,0
  350 data 78, 56,56,16,254,56,254,0,0
  360 print "{down}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}left            z"
  361 print "{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}right           x"
  362 print "{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}jump            m"
  363 print "{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}wait  hold down n"
  364 print "{down}    {rvon}          press a key           "
  365 print "{down}{blu}original by a. sherwood, published in"
  366 print "sep 1984 issue of sinclair programs.{blk}"
  370 getk$:if k$="" then goto 370
  400 d$="{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}"
  401 a$="{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}{rght}"
 1000 l=3:s=0
 1010 rem todo:flashy border
 1020 print"{clr}":gosub 8000
 1030 print"{blk}{home}    score 00000           high 00000"
 1040 y=20:x=0
 1050 if l<1 then end : rem game over
 1060 a=17:m=1:k=0
 1070 r=1:q=6
 1090 print"{home}"left$(d$,3)left$(a$,4)"{red}{rvon} {blk}"
 1100 print"{home}"left$(d$,10)left$(a$,4+17)"          "
 1110 print"{home}"left$(d$,16)left$(a$,4+6)"          "
 1120 print"{home}"left$(a$,4+16)"{red}A"l
 1125 d=-1
 1130 if s>h then h=s
 1140 rem todo: score and high score
 1150 rem todo: beeps
 1160 k=k+1: if k=2 then k=0
 1165 print "{home}"left$(d$,10)left$(a$,4+a)"    "
 1166 a=a+m
 1167 print "{home}"left$(d$,10)left$(a$,4+a)"{blu}{rvon}####{rvof}{blk}"
 1168 if a=17 or a=23 then m=-m
 1170 getk$:k0=peek(197)
 1171 if k$="z" or k0=12 then d=-1
 1172 if k$="x" or k0=23 then d=1
 1173 if k$="n" or k0=39 then goto 1190
 1174 if k$="m" or k0=36 then goto 3000
 1180 x=x+d
 1190 if x>31 then x=31
 1200 if x<0 then x=0
 1210 if y=3 and x<2 then stop: rem todo: end level
 1220 c=peek(1024+40*y+4+x)
 1225 if c<>32 and c<>83 and c<>90 and c<>77 then stop:rem crash
 1230 print"{home}"left$(d$,y)left$(a$,4+x-d)" "
 1240 print"{home}"left$(d$,y)left$(a$,4+x)"{blk}S"
 1250 rem beep
 1260 if peek(1024+40*(y+1)+4+x)=32 then stop: rem todo: fall
 1270 q=q+r
 1280 print"{home}"left$(d$,16)left$(a$,4+q-r)"  "
 1290 print"{home}"left$(d$,16)left$(a$,4+q)"{red}{rvon}//{rvof}{blk}"
 1300 if q=6 or q=13 then r=-r
 1310 if d=1 then goto 1330
 1320 print"{home}"left$(d$,y)left$(a$,4+x)"{blk}Z":goto 1340
 1330 print"{home}"left$(d$,y)left$(a$,4+x)"{blk}M"
 1340 goto 1160
 1500 goto 1160
 3000 rem jump
 3002 print"{home}"left$(d$,y)left$(a$,4+x)"{blk}N"
 3499 stop
 4000 k0=peek(197)
 4010 printk0
 4020 goto4000
 6000 restore:for c=1 to 81:read d:next c:return
 6030 data 4,0,7, 4,28,4, 5,16,5, 6,7,5, 6,18,7, 6,28,4, 8,0,6, 8,31,1, 10,9,7
 6035 data 10,28,4, 11,4,9, 12,0,3, 14,0,2, 14,17,4, 14,30,2, 16,0,5, 16,16,6
 6040 data 16,25,7, 18,30,2, 20,5,1, 20,15,1, 20,26,6, 21,0,8, 21,11,8
 6045 data 21,21,3, 21,26,6, 0,0,0
 6060 data 4,0,4, 4,15,5, 4,22,4, 5,0,7, 5,9,4, 5,28,4, 7,31,1, 9,8,3, 9,12,4
 6065 data 9,28,4, 10,3,3, 10,29,3, 11,0,2, 13,0,1, 13,7,1, 14,7,5, 15,0,5
 6066 data 15,16,3, 15,22,6, 17,29,3, 19,30,2, 20,4,1, 20,8,1, 20,14,5, 20,26,1
 6067 data 21,0,12, 21,15,3, 21,23,9, 0,0,0
 6080 data 4,0,7, 5,28,4, 6,4,3, 6,19,5, 7,5,5, 7,13,4, 7,31,1, 9,28,2, 9,31,1
 6081 data 10,11,5, 11,13,2, 12,0,4, 12,7,7, 13,9,4, 13,29,3, 14,0,1, 14,8,4
 6082 data 15,23,3, 15,30,2, 16,0,5, 16,16,6, 17,29,3, 19,8,2, 19,30,2, 20,5,6
 6083 data 20,14,4, 20,23,1, 21,0,12, 21,18,10, 21,29,3, 0,0,0
 6090 data 4,0,3, 5,20,11, 6,3,5, 6,18,8, 8,6,4, 8,11,6, 8,28,2, 9,30,2, 13,27,3
 6091 data 11,31,1, 12,0,4, 12,6,2, 12,9,5, 13,18,3, 13,9,2, 13,24,3, 14,0,1
 6092 data 16,1,4, 16,16,5, 17,22,4, 17,29,3, 19,6,6, 19,30,2, 20,16,3
 6093 data 21,0,6, 21,16,3, 21,23,6, 0,-1,0
 7000 print"{clr}"
 7001 gosub 8000
 7005 print"{home}"
 7010 return
 8000 read j: read m: read i
 8004 if m=-1 then gosub 6000
 8005 if i=0 then print"{blk}":return
 8006 if m=0 or m+i=32 then print"{blk}":goto 8010
 8007 print"{red}"
 8010 rem for f=o to i-1
 8020 rem poke 1024+40*j+m+f+4,91
 8021 rem next f
 8030 b$="{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}{SHIFT-+}"
 8033 print"{home}"left$(d$,j)left$(a$,m+4)left$(b$,i)
 8040 goto 8000
 9000 rem debug: dump level data
 9005 gosub 6000
 9010 read j,m,i
 9020 printj,m,i
 9030 if m=-1 then return
 9040 goto 9010
 9100 def fn a(x) = x + 1

